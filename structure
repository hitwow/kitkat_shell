1. 用户交互模块
文件m_user.c
init() 初始化相关参数，包括当前路径，当前用户，当前用户的home目录路径等。全局变量
	getpwuid(getuid()) 获得用户名和home目录路径
	gethostname() 获得主机名
	getcwd() 获得当前路径
	geteuid() 检测有效用户识别码

show()负责打印提示符	

input() 利用readline()读入输入的信息并传参,字符串传参

output()接受输出信息并打印，字符串传参，接受到进程结束信号则调用show()


2. 输入信息处理
文件m_input.c
split() 调用inhistory()，然后利用flex对传来的字符串进行词法分析

getcmd() 接受词法分析得到的token串，将token串分解为简单指令，同时进行～等表示符的替换，管道以及输出重定向的识别。然后用dup,dup2等函数进行文件描述符的处理来设置重定向，并调用docmd()进行简单指令的执行
docmd() 接受一个简单指令串，然后对该指令进行执行。首先查找alias()文件进行命令别名映射，然后查找内建函数表，若找到则直接调用内建函数，找不到则fork后调用exec()系列函数进行外部程序的运行。

3. 内建功能模块
文件m_inbuild.c
alias() 维护一个alias文件，记载命令别名的映射，加入命令别名
unalias() 从alias文件中删除命令别名

cd() 调用chdir(). ~自动替换成home目录路径

echo() 调用fprintf()实现

pwd() 调用getcwd()获得当前路径并输出

help() 打印帮助文件

inhistory() 将命令写入history文件
history() 打印history文件

exit() 调用exit()退出shell

~~~所有内建函数运行正确则返回0给返回信息处理，否则返回错误代码~~~

4. 返回信息处理
文件m_return.c
re_info() 接受函数或者程序的返回值，正确返回则调用output()直接初始化输出，错误返回则将错误码转换为相应的信息，然后传递字符串给output()进行输出

5. sh脚本编译器
命令解析到运行sh脚本时，调用脚本编译器进行处理。


考虑配置文件，里面存储一些参数，例如history最大可以保存多少。








问题：
权限怎么实现
重定向的问题